import telebot
import tokn
from telebot import types
from sql import SQLite
from parse import Parser

db = SQLite('database.db')
bot = telebot.TeleBot(tokn.Token)


@bot.message_handler(commands=['start'])
def start(message):
    if (not db.subscriber_exists(message.from_user.id)):
        db.add_subscriber(message.from_user.id)
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text="–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç Qiwi", callback_data='update')
    markup.add(button)
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Çüòâ\n–Ø –≤—Å–µ–≥–¥–∞ –ø–æ–¥—Å–∫–∞–∂—É –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç Qiwi, –µ—Å–ª–∏, –∫–æ–Ω–µ—á–Ω–æ, –∫–æ–º–ø—å—é—Ç–µ—Ä –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –≤–∫–ª—é—á–µ–Ω!",
                     reply_markup=markup)


@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id,
                     "–ü–æ–º–æ–≥–∞—é —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç Qiwi\n\n/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n/currency - —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç\n/update - –æ–±–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç\n/sub - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç\n/unsub - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏\n/contacts - —Å–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º")


@bot.message_handler(commands=['update'])
def update(message):
    return currency(message)


@bot.message_handler(commands=['contacts'])
def contacts(message):
    markup = types.InlineKeyboardMarkup()
    item = [
        types.InlineKeyboardButton(text="Telegram", url="https://t.me/UtxIDtXzgix"),
        types.InlineKeyboardButton(text="VK", url="https://vk.com/pharsifal"),
        types.InlineKeyboardButton(text="‚èÆ–ù–∞–∑–∞–¥", callback_data='cancel')
    ]
    markup.add(*item)
    bot.send_message(message.chat.id, "–í—Å–µ–º –ø—Ä–∏–≤–ª–µ—Ç!", reply_markup=markup)


@bot.message_handler(commands=['freemoney'])
def freeMoney(message):
    rickRoll = types.InlineKeyboardMarkup()
    rickItem = [
        types.InlineKeyboardButton(text="–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –¥–µ–Ω—å–≥–∏ —Ç—É—Ç", url="https://www.youtube.com/watch?v=dQw4w9WgXcQ"),
        types.InlineKeyboardButton(text="‚èÆ–ù–∞–∑–∞–¥", callback_data='cancel')
    ]
    rickRoll.add(*rickItem)
    bot.send_message(message.chat.id, "–¢–æ—á–Ω–æ –Ω–µ –æ–±–º–∞–Ω!!", reply_markup=rickRoll)


@bot.message_handler(commands=['sub'])
def subscribe(message):
    if (db.subscription_active(message.from_user.id, False)):
        db.update_subscription(message.from_user.id, True)
        bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!")
    else:
        bot.send_message(message.chat.id, "–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!")


@bot.message_handler(commands=['unsub'])
def unsubscribe(message):
    if (db.subscription_active(message.from_user.id, True)):
        db.update_subscription(message.from_user.id, False)
        bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏!")
    else:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!")


@bot.message_handler(commands=['currency'])
def currency(message):
    global cur
    msg = bot.send_message(message.chat.id, "–û–±–Ω–æ–≤–ª—è—é –∫–æ—Ç–∏—Ä–æ–≤–∫–∏...")
    cur = Parser.result(message.chat.id)
    bot.delete_message(message.chat.id, msg.message_id)
    markup = types.InlineKeyboardMarkup(row_width=2)
    item = [
        types.InlineKeyboardButton(text="üá∞üáø KZT", callback_data='kzt'),
        types.InlineKeyboardButton(text="üá∫üá∏ USD", callback_data='usd'),
        types.InlineKeyboardButton(text="üá™üá∫ EUR", callback_data='eur'),
        types.InlineKeyboardButton(text="üá®üá≥ CNY", callback_data='cny'),
        types.InlineKeyboardButton(text="–û–±–Ω–æ–≤–∏—Ç—å –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ üîÑ", callback_data='update')
    ]
    markup.add(*item)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É", reply_markup=markup)


@bot.message_handler(commands=['kzt'])
def kzt(message):
    bot.send_message(message.chat.id, f'üá∞üáø 100 KZT\n–ü–æ–∫—É–ø–∫–∞: {str(cur[1])} RUB\n–ü—Ä–æ–¥–∞–∂–∞: {str(cur[2])} RUB')


@bot.message_handler(commands=['usd'])
def usd(message):
    bot.send_message(message.chat.id, f'üá∫üá∏ 1 USD\n–ü–æ–∫—É–ø–∫–∞: {str(cur[4])} RUB\n–ü—Ä–æ–¥–∞–∂–∞: {str(cur[5])} RUB')


@bot.message_handler(commands=['eur'])
def eur(message):
    bot.send_message(message.chat.id, f'üá™üá∫ 1 EUR\n–ü–æ–∫—É–ø–∫–∞: {str(cur[7])} RUB\n–ü—Ä–æ–¥–∞–∂–∞: {str(cur[8])} RUB')


@bot.message_handler(commands=['cny'])
def cny(message):
    bot.send_message(message.chat.id, f'üá®üá≥ 1 CNY\n–ü–æ–∫—É–ø–∫–∞: {str(cur[10])} RUB\n–ü—Ä–æ–¥–∞–∂–∞: {str(cur[11])} RUB')


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.message:
        if call.data == "help":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            return help(call.message)
        elif call.data == "contacts":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            return contacts(call.message)
        elif call.data == "freemoney":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            return freeMoney(call.message)
        elif call.data == "currency":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            return currency(call.message)
        elif call.data == "cancel":
            return help(call.message)
        elif call.data == "update":
            return currency(call.message)
        elif call.data == "kzt":
            return kzt(call.message)
        elif call.data == "usd":
            return usd(call.message)
        elif call.data == "eur":
            return eur(call.message)
        elif call.data == "cny":
            return cny(call.message)


if __name__ == '__main__':
    bot.polling()
